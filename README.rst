=============
Dynamo plugin
=============

.. image:: https://img.shields.io/pypi/v/scipion-em-dynamo.svg
        :target: https://pypi.python.org/pypi/scipion-em-dynamo
        :alt: PyPI release

.. image:: https://img.shields.io/pypi/l/scipion-em-dynamo.svg
        :target: https://pypi.python.org/pypi/scipion-em-dynamo
        :alt: License

.. image:: https://img.shields.io/pypi/pyversions/scipion-em-dynamo.svg
        :target: https://pypi.python.org/pypi/scipion-em-dynamo
        :alt: Supported Python versions

.. image:: https://img.shields.io/pypi/dm/scipion-em-dynamo
        :target: https://pypi.python.org/pypi/scipion-em-dynamo
        :alt: Downloads

Current development
-------------------

This plugin is currently in **BETA** mode.


Installation
------------

You will need to use `3.0 <https://scipion-em.github.io/docs/release-3.0.0/docs/scipion-modes/how-to-install.html>`_ version of Scipion to be able to run these protocols.

Protocols
---------
* **bin tomograms** (DynamoBinTomograms ): Reduce the size of a SetOfTomograms by a binning factor.
* **vectorial picking** ( DynamoBoxing ): Manual vectorial picker from Dynamo. After choosing the Tomogram to be picked, the tomo slicer from Dynamo will be direclty loaded with all the models previously saved in the disk (if any). This picking will only save the "user points" defined in a set of models. It is possible to create several models at once in a given tomogram. Once the coordinates are defined, the models are automatically saved in the catalogue and registered. Currently the following Dynamo models are supported:  Ellipsoidal Vesicle
* **coords to model** ( DynamoCoordsToModel ): Convert a SetOfCoordinates3D to a SetOfMeshes formatted to be appropiate to work with Dynamo protocols.
* **vectorial extraction** ( DynamoExtraction ): Extraction of subtomograms using Dynamo.
* **import subtomos from Dynamo** ( DynamoImportSubtomos ): This protocol imports subtomograms with metadata generated by a Dynamo table. A Dynamo catalogue can be also imported in order to relate subtomograms with their original tomograms.
* **import tomograms from Dynamo** ( DynamoImportTomograms ): This protocols imports a series of Tomogram stored in a Dynamo catalogue into Scipion. In order to avoid handling a MatLab binary, the script relies on MatLab itself to turn a  binary MatLab object into an Structure which can be afterwards read by Python.
* **model workflow** ( DynamoModelWorkflow ): Apply a model workflow to a SetOfMeshes generated by Dynamo Boxing protocol. This workflow will use the  models created by the user to create the corresponding cropping meshes needed to extract the crop points.
* **subBoxing** ( DynamoSubBoxing ): SubBoxing using Dynamo.
* **Subtomogram alignment** ( DynamoSubTomoMRA ): This protocol will align subtomograms using Dynamo MRA Subtomogram Averaging.


**Latest plugin versions**
==========================

If you want to check the latest version and release history go to `CHANGES <https://github.com/scipion-em-dynamo/dynamo/blob/master/CHANGES.txt>`_


**Installing the plugin**
=========================

In order to install the plugin follow these instructions:

.. code-block::

    scipion installp -p scipion-em-dynamo


or through the **plugin manager** by launching Scipion and following **Configuration** >> **Plugins**


**To install in development mode**

Clone or download the plugin repository

.. code-block::

    git clone https://github.com/scipion-em/scipion-em-dynamo.git

Install the plugin in developer mode.

.. code-block::

    scipion installp -p local/path/to/scipion-em-dynamo --devel


To check the installation, simply run one of the tests. A complete list of tests can be displayed by executing ``scipion test --show --grep imod``


Buildbot status
---------------

Status devel version:

.. image:: http://scipion-test.cnb.csic.es:9980/badges/dynamo_devel.svg


Status production version:

.. image:: http://scipion-test.cnb.csic.es:9980/badges/dynamo_prod.svg



